# Benchmark for the equations of Sramek, Ricard, Bercovici 2007 
# Additionnal info about this benchmark is available in 
# the PhD thesis of Sramek (p48), 
# from Univerzita Karlova, Matematicko-fyzikální fakulta
# and available online at https://dspace.cuni.cz/bitstream/handle/20.500.11956/12248/140024981.pdf?sequence=1
#
# Compaction of a simple 1D column with 30% of liquid

# We use a modified version of the global melt material model
# to use the correct formulations for the permeability, 
# bulk and shear viscosities. 

# We use here a dimensionless formulation.

set Additional shared libraries            = ./libmelt_SRB2007.so 

set Dimension                              = 2
set Output directory                       = output-SramekRicardBercovici2007
set Use years in output instead of seconds = false  #because dimensionless (so 1 second means 1 unit of time) 
set End time                               = 100.


# For models with melt migration, there is a nonlinear coupling between
# the Stokes system, the temperature, and the advection equation for the 
# porosity (several material properties, such as the viscosities and the
# permeability depend nonlinearly on the porosity; and changes in temperature
# determine how much material is melting or freezing). 
# Because of that, we use a nonlinear solver scheme ('iterated Advection and Stokes')
# that iterates between all of these equations, and we have to set its 
# solver tolerance and the maximum number of iterations separately from 
# the linear solver parameters. 
set Nonlinear solver scheme                =  iterated Advection and Stokes
set Max nonlinear iterations               = 20
set Nonlinear solver tolerance             = 1e-5


subsection Solver parameters
  subsection Stokes solver parameters
    set Linear solver tolerance = 1e-8
    set Number of cheap Stokes solver steps = 100
  end
end



# We prescribe free-slip boundary conditions on all sides. 
subsection Boundary velocity model
  set Tangential velocity boundary indicators = left, right, bottom, top
end

subsection Melt settings
  # In addition, we now also specify in the model settings that we want to
  # run a model with melt transport. 
  set Include melt transport                  = true
end

##################### Settings for melt transport ########################

# In models with melt transport, we always need a compositional field with
# the name 'porosity'. Only the field with that name will be advected with
# the melt velocity, all other compositional fields will continue to work
# as before. Material models will typically query for the field with the 
# name porosity to compute all melt material properties. 
subsection Compositional fields
  set Number of fields = 1
  set Names of fields = porosity
end


##################### Initial conditions ########################

# We do not want to solve for the temperature, so we set it to 0.
subsection Initial temperature model
  set List of model names = function
end

# Now that our model uses compositional fields, we also need initial
# conditions for the composition. 
subsection Initial composition model
  set Model name = function
  subsection Function
    set Function expression = 0.3
  end
end

##################### Boundary conditions ########################

# we again set the temperature to 0 to avoid to solve it.
subsection Boundary temperature model
  set Fixed temperature boundary indicators = top, bottom
  set List of model names = constant 

  subsection Constant
    set Boundary indicator to temperature mappings = top: 0., bottom:0.
  end
end

# We set the top boundary to be at 1. (full liquid) and the bottom at 0. (full solid)
subsection Boundary composition model
  set List of model names = box
  set Fixed composition boundary indicators = top, bottom
  subsection Box
   set Top composition = 1.
   set Bottom composition = 0.
   set Right composition = 0.
   set Left composition = 0.
  end
 
end

# Models with melt transport also need an additional boundary condition: 
# the gradient of the fluid pressure at the model boundaries. This boundary 
# condition indirectly also prescribes boundary conditions for the melt velocity, 
# as the melt velocity is related to the fluid pressure gradient via Darcy's law.
# If we choose the fluid pressure gradient = solid density * gravity, melt will
# flow in and out of the model (even if the solid can not flow out) according to
# the dynamic fluid pressure in the model. Conversely, if we choose the 
# fluid pressure gradient = fluid density * gravity, melt will flow in or out
# with the same velocity as the solid (so for a closed boundary, no melt will
# flow in or out). This is what we choose as our boundary condition here. 
subsection Boundary fluid pressure model
  set Plugin name = density
  subsection Density
    set Density formulation = fluid density 
  end
end

##################### Model geometry ########################

# The model geometry is an elongated vertical pipe that is only 1 cell wide.
subsection Geometry model
  set Model name = box

  subsection Box
    set X extent = 0.005
    set Y extent = 1
    set Y repetitions = 200
    set X repetitions = 1
  end

end

################ Gravity and material properties ##################

# The model has a constant gravity. 
subsection Gravity model
  set Model name = vertical

  subsection Vertical
    set Magnitude = 1.
  end
end

# We use  a material model modifying the melt global model, 
# which is one of the
# material models that works with melt transport, as it also
# specifies the material properties needed for melt migration, 
# such as the permeability, the melt density and the melt 
# viscosity.
# In addition to the material properties for the solid rock, 
# we also have to specify properties for the melt.
#
# Most parameters are set to 0 (to neglect them)
# The densities are set to have a density difference between
# solid and liquid of 1. 
# The viscosities are set to force a given compaction length. 
# The reference values for bulk and shear viscosities have 
# to be the same. 

subsection Material model

  set Model name = melt srb 
  
  subsection Melt srb

    set Include melting and freezing = false

    set Thermal conductivity              = 1.
    set Reference solid density           = 2.
    # The melt usually has a different (lower) density than the solid. 
    # We want to set the density difference between liquid and solid to 1,
    # so we set the melt density to 1.
    set Reference melt density            = 1.

    set Reference shear viscosity         = 1.
    set Reference temperature             = 1  # has to be set to 1, but no effect
    set Reference melt viscosity          = 1. # 25. to test for compaction lenght =0.2
    
    set Reference permeability            = 1.
    set Reference bulk viscosity          = 1.
   
    # Pressure and temperature dependence set to 0 
    set Exponential melt weakening factor = 0
    set Thermal bulk viscosity exponent   = 0.
    set Melt compressibility              = 0.
    set Melt bulk modulus derivative      = 0.
    set Thermal viscosity exponent        = 0.
    set Thermal expansion coefficient     = 0.
    set Solid compressibility             = 0.

  end
end

##################### Mesh refinement #########################

# The grid is already defined when defining the box, with only 1 cell per repetition.
subsection Mesh refinement
  set Initial global refinement                = 0
  set Time steps between mesh refinement = 0
end


##################### Postprocessing ########################

# In addition to the visualization output, we select a number 
# of postprocessors that allow us to compute some statistics
# about the output (to see how much the model without and the
# model with melt migration differ), and in particular we use
# the "depth average" postprocessor that will allow us to plot
# depth-averaged model quantities over time. 
subsection Postprocess

  set List of postprocessors = visualization, composition statistics, velocity statistics, temperature statistics, depth average

  # For the model with melt migration, also add a visualization
  # postprocessor that computes the material properties relevant
  # to migration (permeability, viscosity of the melt, etc.).

  subsection Visualization
    set List of output variables      = material properties, nonadiabatic temperature, strain rate, melt material properties

    subsection Material properties
      set List of material properties = density, viscosity, thermal expansivity
    end

    subsection Melt material properties
      set List of properties = fluid density, permeability, fluid viscosity, compaction viscosity
    end

    set Number of grouped files       = 1
    set Output format                 = gnuplot  # We use python to do the visualization, through the gnuplots outputs.
    set Time between graphical output = 1. 
  end


end




